/* DATABSE SET*/
CREATE DATABASE SALES_ANALYTICS;

USE SALES_ANALYTICS;

/*CREATE TABLES*/
-- CUSTOMER TABLE
CREATE TABLE CUSTOMERS(CUSTOMER_ID INT PRIMARY KEY,CUSTOMER_NAME CHAR(200),REGION CHAR(200));
-- PRODUCTS TABLE
CREATE TABLE PRODUCTS(PRODUCT_ID INT PRIMARY KEY,PRODUCT_NAME CHAR(200),CATEGORY VARCHAR(255));
-- ORDERS TABLE
CREATE TABLE ORDERS(ORDER_ID INT PRIMARY KEY,CUSTOMER_ID INT,ORDER_DATE DATE,FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID));
-- ORDER DETAILS TABLE
CREATE TABLE ORDER_DETAILS
(ORDER_ID INT,PRODUCT_ID INT,QUANTITY INT,UNIT_PRICE DECIMAL(10,2),
PRIMARY KEY(ORDER_ID,PRODUCT_ID),
FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID));

/*INSERT VALUES INTO THE TABLES*/
-- CUSTOMERS 
INSERT INTO CUSTOMERS VALUES
(1, 'Amit Verma', 'Uttar Pradesh'),
(2, 'Priya Singh', 'Tamil Nadu'),
(3, 'Rahul Mehta', 'West Bengal'),
(4, 'Sneha Rao', 'Maharashtra'),
(5, 'Karan Patel', 'Gujarat'),
(6, 'Divya Nair', 'Kerala'),
(7, 'Arjun Reddy', 'Telangana'),
(8, 'Meera Sharma', 'Rajasthan'),
(9, 'Vikas Yadav', 'Bihar'),
(10, 'Ritika Desai', 'Punjab');
-- PRODUCTS
INSERT INTO PRODUCTS VALUES 
(101, 'Laptop', 'Electronics'),
(102, 'Smartphone', 'Electronics'),
(103, 'Chair', 'Furniture'),
(104, 'Notebook', 'Stationery'),
(105, 'Water Bottle', 'Kitchen'),
(106, 'Desk Lamp', 'Electronics'),
(107, 'Backpack', 'Accessories'),
(108, 'Coffee Mug', 'Kitchen'),
(109, 'Whiteboard', 'Office Supplies'),
(110, 'Pen Set', 'Stationery');
-- ORDERS
INSERT INTO ORDERS VALUES
(1001, 1, '2022-11-12'),
(1002, 2, '2023-01-08'),
(1003, 3, '2023-05-20'),
(1004, 4, '2023-07-25'),
(1005, 5, '2023-09-10'),
(1006, 6, '2024-01-18'),
(1007, 7, '2024-03-02'),
(1008, 8, '2024-04-15'),
(1009, 9, '2024-05-30'),
(1010, 10, '2024-06-10');
-- ORDER DEIALS
INSERT INTO ORDER_DETAILS VALUES
(1001, 101, 1, 55000.00),     
(1001, 104, 2, 40.00),        
(1002, 102, 1, 25000.00),     
(1003, 103, 2, 1200.00),      
(1004, 105, 3, 200.00),       
(1005, 106, 2, 800.00),       
(1006, 107, 1, 1500.00),     
(1007, 108, 4, 300.00),       
(1008, 109, 1, 2500.00),      
(1009, 110, 5, 50.00),        
(1010, 101, 1, 54500.00);

SELECT * FROM CUSTOMERS;
SELECT * FROM PRODUCTS;
SELECT * FROM ORDERS;
SELECT * FROM ORDER_DETAILS;

/* ANALYSIS QUERIES*/
-- TOP 5 CUSTOMERS BY TOTAL SPENDING
--  Total spending = SUM of (quantity Ã— unit price) for each customer
SELECT C.CUSTOMER_NAME, 
SUM(OD.QUANTITY * OD.UNIT_PRICE) AS TOTAL_SPENT
FROM CUSTOMERS C
JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
JOIN ORDER_DETAILS OD ON O.ORDER_ID = OD.ORDER_ID
GROUP BY C.CUSTOMER_NAME
ORDER BY TOTAL_SPENT DESC
LIMIT 5;

-- MOST FREQUENTLY PURCHASED PRODUCT
SELECT P.PRODUCT_NAME,P.CATEGORY,
SUM(OD.QUANTITY) AS TOTAL_SOLD
FROM PRODUCTS P
JOIN ORDER_DETAILS OD ON P.PRODUCT_ID = OD.PRODUCT_ID
GROUP BY P.CATEGORY,P.PRODUCT_NAME
ORDER BY TOTAL_SOLD DESC
LIMIT 5;

--  PRODUCTS BY QUANTITY AND REVENUE
SELECT P.PRODUCT_NAME,P.PRODUCT_ID,P.CATEGORY,
SUM(OD.QUANTITY) AS TOTAL_SOLD,
SUM(OD.QUANTITY * OD.UNIT_PRICE) AS TOTAL_REVENUE 
FROM PRODUCTS P
JOIN ORDER_DETAILS OD ON P.PRODUCT_ID = OD.PRODUCT_ID
GROUP BY P.PRODUCT_NAME,P.PRODUCT_ID,P.CATEGORY
ORDER BY TOTAL_SOLD ;

-- CATEGORY WISE SALES DISTRIBUTION
SELECT P.CATEGORY,
SUM(OD.QUANTITY * OD.UNIT_PRICE) AS TOTAL_REVENUE
FROM PRODUCTS P
JOIN ORDER_DETAILS OD ON P.PRODUCT_ID = OD.PRODUCT_ID
GROUP BY P.CATEGORY
ORDER BY TOTAL_REVENUE;

-- MONTHLY SALES TREND
SELECT DATE_FORMAT(O.ORDER_DATE, '%Y-%M') AS MONTH,
SUM(OD.QUANTITY * OD.UNIT_PRICE) AS MONTHLY_SALES
FROM ORDERS O
JOIN ORDER_DETAILS OD ON O.ORDER_ID = OD.ORDER_ID 
GROUP BY MONTH
ORDER BY MONTHLY_SALES DESC;

-- TOTAL ORDERS PER CUSTOMER
SELECT C.CUSTOMER_NAME,
DATE_FORMAT(O.ORDER_DATE, '%Y-%M') AS MONTHS,
COUNT(*) AS TOTAL_ORDERS
FROM CUSTOMERS C
JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
GROUP BY C.CUSTOMER_NAME,MONTHS
ORDER BY TOTAL_ORDERS;

-- AVERAGE ORDER VALUE PER CUSTOMER
SELECT C.CUSTOMER_NAME,
ROUND(SUM(OD.QUANTITY * OD.UNIT_PRICE) / COUNT(DISTINCT O.ORDER_ID), 2) AS AVG_ORDER_VALUE
FROM CUSTOMERS C
JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
JOIN ORDER_DETAILS OD ON O.ORDER_ID = OD.ORDER_ID
GROUP BY C.CUSTOMER_NAME
ORDER BY AVG_ORDER_VALUE DESC;

-- MONTHLY ORDER + AVERAGE ORDER PER CUSTOMER
SELECT C.CUSTOMER_NAME,
DATE_FORMAT(O.ORDER_DATE, '%Y-%m') AS MONTHS,
COUNT(*) AS TOTAL_ORDERS,
ROUND(AVG(COUNT(*)) OVER (PARTITION BY C.CUSTOMER_NAME), 2) AS AVG_ORDERS
FROM CUSTOMERS C
JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
GROUP BY C.CUSTOMER_NAME, MONTHS
ORDER BY C.CUSTOMER_NAME, MONTHS; 